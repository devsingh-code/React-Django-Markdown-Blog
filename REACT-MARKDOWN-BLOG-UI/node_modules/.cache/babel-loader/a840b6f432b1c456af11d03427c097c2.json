{"ast":null,"code":"import axios from 'axios';\nconst authAxios = axios.create();\nauthAxios.interceptors.request.use(config => {\n  const newConfig = config;\n  const token = localStorage.getItem(\"token\");\n  newConfig.headers = {\n    \"Authorization\": `Token ${token}`\n  };\n  return newConfig;\n});\n\nfunction isAuthenticated() {\n  const token = localStorage.getItem(\"token\");\n  console.log(token);\n  return token !== null && token !== undefined;\n}\n\nfunction logout() {\n  localStorage.removeItem(\"token\");\n}\n\nconst authenticationService = {\n  isAuthenticated: isAuthenticated(),\n  logout\n};\nexport { authAxios, authenticationService };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Projects/React_Markdown_Blog_Project/REACT-MARKDOWN-BLOG-UI/src/services/authentication.service.js"],"names":["axios","authAxios","create","interceptors","request","use","config","newConfig","token","localStorage","getItem","headers","isAuthenticated","console","log","undefined","logout","removeItem","authenticationService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,EAAlB;AAEAD,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCC,MAAM,IAAG;AACxC,QAAMC,SAAS,GAAGD,MAAlB;AACA,QAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAH,EAAAA,SAAS,CAACI,OAAV,GAAoB;AAChB,qBAAmB,SAAQH,KAAM;AADjB,GAApB;AAGA,SAAOD,SAAP;AACH,CAPD;;AASA,SAASK,eAAT,GAA2B;AACvB,QAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,SAAOA,KAAK,KAAI,IAAT,IAAiBA,KAAK,KAAKO,SAAlC;AACH;;AAGD,SAASC,MAAT,GAAiB;AACbP,EAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACH;;AACD,MAAMC,qBAAqB,GAAG;AAC1BN,EAAAA,eAAe,EAACA,eAAe,EADL;AAE1BI,EAAAA;AAF0B,CAA9B;AAKA,SAAQf,SAAR,EAAmBiB,qBAAnB","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst authAxios = axios.create()\r\n\r\nauthAxios.interceptors.request.use(config =>{\r\n    const newConfig = config\r\n    const token = localStorage.getItem(\"token\")\r\n    newConfig.headers = {\r\n        \"Authorization\" : `Token ${token}`\r\n    }\r\n    return newConfig\r\n})\r\n\r\nfunction isAuthenticated (){\r\n    const token = localStorage.getItem(\"token\")\r\n    console.log(token);\r\n    return token!== null && token !== undefined\r\n}\r\n\r\n\r\nfunction logout(){\r\n    localStorage.removeItem(\"token\")\r\n}\r\nconst authenticationService = {\r\n    isAuthenticated:isAuthenticated(),\r\n    logout\r\n}\r\n\r\nexport {authAxios, authenticationService}"]},"metadata":{},"sourceType":"module"}