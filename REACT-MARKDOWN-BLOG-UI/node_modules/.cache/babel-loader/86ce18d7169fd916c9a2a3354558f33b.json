{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Projects\\\\React_Markdown_Blog_Project\\\\REACT-MARKDOWN-BLOG-UI\\\\src\\\\containers\\\\PostCreate.js\";\nimport React, { useRef, useState } from 'react';\nimport { Header, Button, Form } from 'semantic-ui-react';\nimport axios from \"axios\";\nimport MarkdownEditor from '@uiw/react-markdown-editor';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { history } from \"../helpers\";\nimport Message from '../components/Message';\nimport { api } from '../api';\n\nconst PostCreate = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(null);\n  const [markdown, setMarkdown] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n  const mdParser = new MarkdownIt();\n  const fileInputRef = useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"thumbnail\", thumbnail);\n    formData.append(\"title\", title);\n    formData.append(\"content\", markdown);\n    axios.post(api.posts.create, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": \"Token a8df07ad37824b4c5fd9ac5d4bc13e424fa4fd8b\"\n      }\n    }).then(res => {\n      setLoading(false);\n      history.push('/');\n    }).catch(err => {\n      setLoading(false);\n      setError(err.message || err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Create a post\"), error && /*#__PURE__*/React.createElement(Message, {\n    danger: true,\n    message: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), thumbnail && /*#__PURE__*/React.createElement(Message, {\n    info: true,\n    message: `Selected image: ${thumbnail.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Title of your post\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(MarkdownEditor, {\n    value: markdown,\n    style: {\n      height: \"500px\"\n    },\n    onChange: ({\n      text\n    }) => setMarkdown(text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fluid: true,\n    content: \"Choose a thumbnail\",\n    labelPosition: \"left\",\n    icon: \"file\",\n    onClick: () => fileInputRef.current.click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: e => setThumbnail(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    fluid: true,\n    loading: loading,\n    disabled: loading,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default PostCreate;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Projects/React_Markdown_Blog_Project/REACT-MARKDOWN-BLOG-UI/src/containers/PostCreate.js"],"names":["React","useRef","useState","Header","Button","Form","axios","MarkdownEditor","MarkdownIt","MdEditor","history","Message","api","PostCreate","error","setError","loading","setLoading","title","setTitle","markdown","setMarkdown","thumbnail","setThumbnail","mdParser","fileInputRef","handleSubmit","e","preventDefault","formData","FormData","append","post","posts","create","headers","then","res","push","catch","err","message","name","target","value","height","text","current","click","files"],"mappings":"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","sourcesContent":["  \r\nimport React, {useRef, useState } from 'react'\r\nimport { Header, Button, Form } from 'semantic-ui-react'\r\nimport axios from \"axios\";\r\nimport MarkdownEditor from '@uiw/react-markdown-editor';\r\nimport MarkdownIt from 'markdown-it'\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport { history } from \"../helpers\";\r\nimport Message from '../components/Message';\r\nimport { api } from '../api';\r\n\r\n\r\n\r\nconst PostCreate = () => {\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    const [title, setTitle] = useState(null);\r\n    const [markdown, setMarkdown] = useState(null)\r\n    const [thumbnail, setThumbnail] = useState(null)\r\n\r\n    const mdParser = new MarkdownIt();\r\n\r\n    const fileInputRef = useRef()\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"thumbnail\", thumbnail)\r\n        formData.append(\"title\", title)\r\n        formData.append(\"content\", markdown)\r\n        axios\r\n            .post(api.posts.create, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                    \"Authorization\": \"Token a8df07ad37824b4c5fd9ac5d4bc13e424fa4fd8b\"\r\n                }\r\n            })\r\n            .then(res => {\r\n                setLoading(false);\r\n                history.push('/')\r\n            })\r\n            .catch(err => {\r\n                setLoading(false);\r\n                setError(err.message || err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>Create a post</Header>\r\n            {error && (\r\n                <Message danger message={error} />\r\n            )}\r\n            {thumbnail && <Message info message={`Selected image: ${thumbnail.name}`} />}\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Field>\r\n                    <label>Title</label>\r\n                    <input \r\n                        placeholder='Title of your post' \r\n                        value={title} \r\n                        onChange={e => setTitle(e.target.value)}\r\n                    />\r\n                </Form.Field>\r\n                <MarkdownEditor\r\n                    value={markdown}\r\n                    style={{ height: \"500px\" }}\r\n                    onChange={({text}) => setMarkdown(text)}\r\n                />\r\n                <Form.Field>\r\n                    <Button\r\n                        type=\"button\"\r\n                        fluid\r\n                        content=\"Choose a thumbnail\" \r\n                        labelPosition=\"left\" \r\n                        icon=\"file\"\r\n                        onClick={() => fileInputRef.current.click()}\r\n                    />\r\n                    <input \r\n                        ref={fileInputRef} \r\n                        type=\"file\" \r\n                        hidden\r\n                        onChange={e => setThumbnail(e.target.files[0])}\r\n                    />\r\n                </Form.Field>\r\n                <Button primary fluid loading={loading} disabled={loading} type='submit'>Submit</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCreate;"]},"metadata":{},"sourceType":"module"}