{"ast":null,"code":"import axios from 'axios';\nimport { api } from '../api';\nconst authAxios = axios.create();\nauthAxios.interceptors.request.use(config => {\n  const newConfig = config;\n  const token = localStorage.getItem(\"token\");\n  newConfig.headers = {\n    \"Authorization\": `Token ${token}`\n  };\n  return newConfig;\n});\n\nfunction isAuthenticated() {\n  const token = localStorage.getItem(\"token\");\n  console.log(token);\n  return token !== null && token !== undefined;\n}\n\nfunction signup(username, email, password1, password2) {\n  return axios.post(api.auth.register, {\n    username,\n    email,\n    password1,\n    password2\n  }).then(res => {\n    localStorage.setItem(\"token\", res.data.key);\n    return res;\n  });\n}\n\nfunction login(username, email, password) {\n  return axios.post(api.auth.login, {\n    username,\n    email,\n    password\n  }).then(res => {\n    localStorage.setItem(\"token\", res.data.key);\n    return res;\n  });\n}\n\nfunction logout() {\n  localStorage.removeItem(\"token\");\n}\n\nconst authenticationService = {\n  isAuthenticated: isAuthenticated(),\n  logout,\n  login,\n  signup\n};\nexport { authAxios, authenticationService };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Projects/React_Markdown_Blog_Project/REACT-MARKDOWN-BLOG-UI/src/services/authentication.service.js"],"names":["axios","api","authAxios","create","interceptors","request","use","config","newConfig","token","localStorage","getItem","headers","isAuthenticated","console","log","undefined","signup","username","email","password1","password2","post","auth","register","then","res","setItem","data","key","login","password","logout","removeItem","authenticationService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,QAAlB;AAEA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,EAAlB;AAEAD,SAAS,CAACE,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCC,MAAM,IAAG;AACxC,QAAMC,SAAS,GAAGD,MAAlB;AACA,QAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAH,EAAAA,SAAS,CAACI,OAAV,GAAoB;AAChB,qBAAmB,SAAQH,KAAM;AADjB,GAApB;AAGA,SAAOD,SAAP;AACH,CAPD;;AASA,SAASK,eAAT,GAA2B;AACvB,QAAMJ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,SAAOA,KAAK,KAAI,IAAT,IAAiBA,KAAK,KAAKO,SAAlC;AACH;;AAGD,SAASC,MAAT,CAAgBC,QAAhB,EAAyBC,KAAzB,EAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AAClD,SAAOrB,KAAK,CAACsB,IAAN,CAAWrB,GAAG,CAACsB,IAAJ,CAASC,QAApB,EAA6B;AAChCN,IAAAA,QADgC;AACvBC,IAAAA,KADuB;AAChBC,IAAAA,SADgB;AACLC,IAAAA;AADK,GAA7B,EAGNI,IAHM,CAGDC,GAAG,IAAG;AACRhB,IAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA6BD,GAAG,CAACE,IAAJ,CAASC,GAAtC;AACA,WAAOH,GAAP;AACH,GANM,CAAP;AAOH;;AAED,SAASI,KAAT,CAAeZ,QAAf,EAAyBC,KAAzB,EAAgCY,QAAhC,EAA0C;AACtC,SAAO/B,KAAK,CAACsB,IAAN,CAAWrB,GAAG,CAACsB,IAAJ,CAASO,KAApB,EAA0B;AAC7BZ,IAAAA,QAD6B;AACpBC,IAAAA,KADoB;AACbY,IAAAA;AADa,GAA1B,EAGNN,IAHM,CAGDC,GAAG,IAAG;AACRhB,IAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA6BD,GAAG,CAACE,IAAJ,CAASC,GAAtC;AACA,WAAOH,GAAP;AACH,GANM,CAAP;AAOH;;AAED,SAASM,MAAT,GAAiB;AACbtB,EAAAA,YAAY,CAACuB,UAAb,CAAwB,OAAxB;AACH;;AACD,MAAMC,qBAAqB,GAAG;AAC1BrB,EAAAA,eAAe,EAACA,eAAe,EADL;AAE1BmB,EAAAA,MAF0B;AAG1BF,EAAAA,KAH0B;AAI1Bb,EAAAA;AAJ0B,CAA9B;AAOA,SAAQf,SAAR,EAAmBgC,qBAAnB","sourcesContent":["import axios from 'axios';\r\nimport {api} from '../api'\r\n\r\nconst authAxios = axios.create()\r\n\r\nauthAxios.interceptors.request.use(config =>{\r\n    const newConfig = config\r\n    const token = localStorage.getItem(\"token\")\r\n    newConfig.headers = {\r\n        \"Authorization\" : `Token ${token}`\r\n    }\r\n    return newConfig\r\n})\r\n\r\nfunction isAuthenticated (){\r\n    const token = localStorage.getItem(\"token\")\r\n    console.log(token);\r\n    return token!== null && token !== undefined\r\n}\r\n\r\n\r\nfunction signup(username,email, password1, password2) {\r\n    return axios.post(api.auth.register,{\r\n        username,email, password1, password2\r\n    })\r\n    .then(res =>{\r\n        localStorage.setItem(\"token\",res.data.key)\r\n        return res\r\n    })\r\n}\r\n\r\nfunction login(username, email, password) {\r\n    return axios.post(api.auth.login,{\r\n        username,email, password\r\n    })\r\n    .then(res =>{\r\n        localStorage.setItem(\"token\",res.data.key)\r\n        return res\r\n    })\r\n}\r\n\r\nfunction logout(){\r\n    localStorage.removeItem(\"token\")\r\n}\r\nconst authenticationService = {\r\n    isAuthenticated:isAuthenticated(),\r\n    logout,\r\n    login,\r\n    signup\r\n}\r\n\r\nexport {authAxios, authenticationService}"]},"metadata":{},"sourceType":"module"}