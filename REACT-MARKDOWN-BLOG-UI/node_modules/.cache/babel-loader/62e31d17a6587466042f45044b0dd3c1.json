{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { authAxios, authenticationService } from '../services';\nimport axios from 'axios';\n\nfunction useFetch(url, initialState = null) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n\n      try {\n        let ax = axios;\n\n        if (authenticationService.isAuthenticated) {\n          ax = authAxios;\n        }\n\n        const res = await ax.get(url);\n        console.log(res.data);\n        setData(res.data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    loading,\n    error\n  };\n}\n\nexport { useFetch };","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Projects/React_Markdown_Blog_Project/REACT-MARKDOWN-BLOG-UI/src/helpers/hooks.js"],"names":["useState","useEffect","authAxios","authenticationService","axios","useFetch","url","initialState","data","setData","loading","setLoading","error","setError","fetchData","ax","isAuthenticated","res","get","console","log","message"],"mappings":"AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAAQC,SAAR,EAAmBC,qBAAnB,QAA+C,aAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,YAAY,GAAC,IAApC,EAAyC;AAErC,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBT,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAM,CAACU,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACY,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,IAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,mBAAea,SAAf,GAA0B;AACtBH,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAG;AACC,YAAII,EAAE,GAAGX,KAAT;;AACA,YAAID,qBAAqB,CAACa,eAA1B,EAA0C;AACtCD,UAAAA,EAAE,GAAGb,SAAL;AACH;;AACD,cAAMe,GAAG,GAAG,MAAMF,EAAE,CAACG,GAAH,CAAOZ,GAAP,CAAlB;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACT,IAAhB;AACAC,QAAAA,OAAO,CAACQ,GAAG,CAACT,IAAL,CAAP;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OATD,CASE,OAAOC,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAACD,KAAK,CAACS,OAAP,CAAR;AACAV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAEJ;;AACDG,IAAAA,SAAS;AACZ,GAnBQ,EAmBP,CAACR,GAAD,CAnBO,CAAT;AAoBJ,SAAO;AACHE,IAAAA,IADG;AAEHE,IAAAA,OAFG;AAGHE,IAAAA;AAHG,GAAP;AAMC;;AAED,SAAQP,QAAR","sourcesContent":["import {useState,useEffect} from 'react';\r\nimport {authAxios, authenticationService} from '../services';\r\nimport axios from 'axios';\r\n\r\nfunction useFetch(url, initialState=null){\r\n\r\n    const [data,setData] = useState(null)\r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n\r\n    useEffect(() =>{\r\n        async function fetchData(){\r\n            setLoading(true);\r\n            try{\r\n                let ax = axios\r\n                if (authenticationService.isAuthenticated){\r\n                    ax = authAxios\r\n                }\r\n                const res = await ax.get(url);\r\n                console.log(res.data);\r\n                setData(res.data)\r\n                setLoading(false)\r\n            } catch (error) {\r\n                setError(error.message)\r\n                setLoading(false)\r\n            }\r\n\r\n        }\r\n        fetchData();\r\n    },[url])\r\nreturn {\r\n    data,\r\n    loading,\r\n    error\r\n}\r\n\r\n}\r\n\r\nexport {useFetch}"]},"metadata":{},"sourceType":"module"}