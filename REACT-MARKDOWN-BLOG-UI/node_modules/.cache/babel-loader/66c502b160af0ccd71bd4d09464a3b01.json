{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport classnames from 'classnames';\nimport * as React from \"react\";\nimport CodeMirror from './components/CodeMirror';\nimport PreviewMarkdown from './components/PreviewMarkdown';\nimport ToolBar from './components/ToolBar';\nimport ToolBarMode from './components/ToolBarMode';\nimport \"./index.css\";\n\nvar MarkdownEditor = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MarkdownEditor, _React$PureComponent);\n\n  var _super = _createSuper(MarkdownEditor);\n\n  function MarkdownEditor() {\n    var _this;\n\n    _classCallCheck(this, MarkdownEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.container = void 0;\n    _this.editorClientHeight = void 0;\n    _this.preview = void 0;\n    _this.toolbarsMode = void 0;\n    _this.CodeMirror = void 0;\n\n    _this.handleResize = function () {\n      var isfullscreen = _this.toolbarsMode.state.fullscreen;\n\n      if (isfullscreen) {\n        _this.setEditorSize(isfullscreen);\n      }\n    };\n\n    _this.getInstance = function (editor) {\n      if (editor) {\n        _this.CodeMirror = editor;\n      }\n    };\n\n    _this.onChange = function (editor, data, value) {\n      var _ref = _this.props,\n          onChange = _ref.onChange;\n\n      if (onChange) {\n        if (_this.preview) {\n          _this.preview.updateSource(editor.getValue());\n        }\n\n        onChange(editor, data, editor.getValue());\n      }\n    };\n\n    _this.onClickMode = function (type) {\n      if (type === 'preview') {\n        _this.previewMarkdown();\n\n        return;\n      }\n\n      if (type === 'fullscreen') {\n        _this.fullScreen();\n\n        return;\n      }\n    };\n\n    _this.onClick = function (type) {\n      var selection = _this.CodeMirror.editor.getSelection();\n\n      var pos = _this.CodeMirror.editor.getCursor();\n\n      var value = ''; // 'header', 'strike', 'underline', 'olist', 'ulist', 'todo', 'link', 'image', 'quote', 'preview'\n\n      if (type === 'bold') {\n        value = selection ? \"**\".concat(selection, \"**\") : \"****\";\n        pos.ch = selection ? pos.ch : pos.ch + 2;\n      }\n\n      if (type === 'italic') {\n        value = selection ? \"*\".concat(selection, \"*\") : \"**\";\n        pos.ch = selection ? pos.ch : pos.ch + 1;\n      }\n\n      if (type === 'header') {\n        value = selection ? \"# \".concat(selection) : '# ';\n        pos.ch = selection ? pos.ch : pos.ch + 2;\n      }\n\n      if (type === 'strike') {\n        value = selection ? \"~~\".concat(selection, \"~~\") : '~~~~';\n        pos.ch = selection ? pos.ch : pos.ch + 2;\n      }\n\n      if (type === 'underline') {\n        value = selection ? \"<u>\".concat(selection, \"</u>\") : '<u></u>';\n        pos.ch = selection ? pos.ch : pos.ch + 3;\n      }\n\n      if (type === 'olist') {\n        value = selection ? \"- \".concat(selection) : '- ';\n        pos.ch = selection ? pos.ch : pos.ch + 2;\n      }\n\n      if (type === 'ulist') {\n        value = selection ? \"1. \".concat(selection) : '1. ';\n        pos.ch = selection ? pos.ch : pos.ch + 3;\n      }\n\n      if (type === 'todo') {\n        value = selection ? \"- [ ] \".concat(selection) : '- [ ] ';\n        pos.ch = selection ? pos.ch : pos.ch + 6;\n      }\n\n      if (type === 'link') {\n        value = '[连接说明](连接地址 \"连接标题\")';\n      }\n\n      if (type === 'image') {\n        value = selection ? \"\".concat(selection, \" ![](\\u56FE\\u7247\\u5730\\u5740 \\\"\\u56FE\\u7247\\u63CF\\u8FF0\\\")\") : '![图片描述](图片地址 \"图片描述\")\\n';\n      }\n\n      if (type === 'quote') {\n        value = selection ? \"> \".concat(selection) : '> ';\n        pos.ch = selection ? pos.ch : pos.ch + 2;\n      }\n\n      _this.CodeMirror.editor.replaceSelection(value);\n\n      _this.CodeMirror.editor.focus();\n\n      _this.CodeMirror.editor.setCursor(pos.line, pos.ch);\n    };\n\n    return _this;\n  }\n\n  _createClass(MarkdownEditor, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          prefixCls = _this$props.prefixCls,\n          className = _this$props.className,\n          toolbars = _this$props.toolbars,\n          toolbarsMode = _this$props.toolbarsMode,\n          onChange = _this$props.onChange,\n          visble = _this$props.visble,\n          visbleEditor = _this$props.visbleEditor,\n          previewProps = _this$props.previewProps,\n          codemirrorProps = _objectWithoutProperties(_this$props, [\"prefixCls\", \"className\", \"toolbars\", \"toolbarsMode\", \"onChange\", \"visble\", \"visbleEditor\", \"previewProps\"]);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: function ref(node) {\n          return _this2.container = node;\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classnames(prefixCls, className)\n      }, /*#__PURE__*/React.createElement(ToolBarMode, {\n        ref: function ref(mode) {\n          return _this2.toolbarsMode = mode;\n        },\n        toolbarsMode: toolbarsMode,\n        onClick: this.onClickMode\n      }), /*#__PURE__*/React.createElement(ToolBar, {\n        toolbars: toolbars,\n        onClick: this.onClick\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classnames(\"\".concat(prefixCls, \"-content\"))\n      }, visbleEditor && /*#__PURE__*/React.createElement(CodeMirror, _extends({\n        visbleEditor: visbleEditor,\n        ref: this.getInstance\n      }, codemirrorProps, {\n        onChange: this.onChange\n      })), /*#__PURE__*/React.createElement(PreviewMarkdown, {\n        visble: visble,\n        ref: function ref(pmd) {\n          return _this2.preview = pmd;\n        },\n        value: this.props.value,\n        previewProps: previewProps\n      }))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.preview && this.CodeMirror) {\n        this.props.visble ? this.preview.show() : this.preview.hide();\n        this.CodeMirror.editor.setSize(this.props.visble ? '50%' : '100%');\n\n        var _this$CodeMirror$edit = this.CodeMirror.editor.getScrollInfo(),\n            clientHeight = _this$CodeMirror$edit.clientHeight;\n\n        this.editorClientHeight = clientHeight;\n        window.addEventListener('resize', this.handleResize, true);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.handleResize, true);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.visble !== this.props.visble) {\n        nextProps.visble ? this.preview.show() : this.preview.hide();\n        this.CodeMirror.editor.setSize(nextProps.visble ? '50%' : '100%');\n      }\n    }\n  }, {\n    key: \"previewMarkdown\",\n    value: function previewMarkdown() {\n      if (this.preview) {\n        this.preview.state.visble ? this.preview.hide() : this.preview.show();\n        this.toolbarsMode.updateMode('preview', !this.preview.state.visble);\n        this.CodeMirror.editor.setSize(this.preview.state.visble ? '100%' : '50%');\n      }\n    }\n  }, {\n    key: \"fullScreen\",\n    value: function fullScreen() {\n      var prefixCls = this.props.prefixCls;\n\n      if (this.toolbarsMode && this.container) {\n        var isfullscreen = !this.toolbarsMode.state.fullscreen;\n        this.toolbarsMode.updateMode('fullscreen', isfullscreen);\n        this.container.className = isfullscreen ? classnames(\"\".concat(prefixCls, \"-fullscreen\")) : '';\n        document.body.style.overflow = isfullscreen ? 'hidden' : 'initial';\n        this.setEditorSize(isfullscreen);\n      }\n    }\n  }, {\n    key: \"setEditorSize\",\n    value: function setEditorSize(isfullscreen) {\n      var clientHeight = document.body.clientHeight;\n      this.CodeMirror.editor.setSize(this.preview.state.visble ? '50%' : '100%', isfullscreen ? clientHeight - 33 : this.editorClientHeight);\n    }\n  }]);\n\n  return MarkdownEditor;\n}(React.PureComponent);\n\nMarkdownEditor.displayName = 'MarkdownEditor';\nMarkdownEditor.defaultProps = {\n  onChange: function onChange() {\n    return null;\n  },\n  prefixCls: 'md-editor',\n  value: '',\n  visbleEditor: true,\n  visble: true\n};\nexport { MarkdownEditor as default };","map":{"version":3,"sources":["../../src/index.tsx"],"names":["MarkdownEditor","React","PureComponent","displayName","defaultProps","onChange","prefixCls","value","visbleEditor","visble","container","editorClientHeight","preview","toolbarsMode","CodeMirror","className","toolbars","previewProps","codemirrorProps","classnames","onClickMode","onClick","getInstance","clientHeight","window","handleResize","isfullscreen","nextProps","editor","document","type","selection","pos"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from \"react\";\nimport { IInstance } from './common/codemirror';\nimport { IProps } from './common/props';\nimport CodeMirror, { ICodeMirror } from './components/CodeMirror';\nimport PreviewMarkdown, { IPreviewMarkdown } from './components/PreviewMarkdown';\nimport ToolBar from './components/ToolBar';\nimport ToolBarMode, { IToolBarModeProps } from './components/ToolBarMode';\nimport './index.less';\n\nexport interface IMarkdownEditor extends IProps, ICodeMirror {\n  prefixCls?: string,\n  value?: string,\n  height?: number,\n  visble?: boolean,\n  visbleEditor?: boolean,\n  toolbars?: string[] | false,\n  toolbarsMode?: IToolBarModeProps['toolbarsMode'] | false,\n  previewProps?: IPreviewMarkdown['previewProps'];\n  options?: CodeMirror.EditorConfiguration,\n}\n\ninterface IMarkdownEditorState { }\n\nexport default class MarkdownEditor extends React.PureComponent<IMarkdownEditor, IMarkdownEditorState> {\n  public static displayName = 'MarkdownEditor';\n  public static defaultProps: IMarkdownEditor = {\n    onChange: () => null,\n    prefixCls: 'md-editor',\n    value: '',\n    visbleEditor: true,\n    visble: true,\n  };\n  public container!: HTMLDivElement;\n  public editorClientHeight!: number;\n  public preview!: PreviewMarkdown;\n  public toolbarsMode!: ToolBarMode;\n  public CodeMirror!: CodeMirror;\n  public render() {\n    const { prefixCls, className, toolbars, toolbarsMode, onChange, visble, visbleEditor, previewProps, ...codemirrorProps } = this.props;\n    return (\n      <div ref={(node: HTMLDivElement) => this.container = node}>\n        <div className={classnames(prefixCls, className)}>\n          <ToolBarMode ref={(mode: ToolBarMode) => this.toolbarsMode = mode} toolbarsMode={toolbarsMode} onClick={this.onClickMode} />\n          <ToolBar toolbars={toolbars} onClick={this.onClick} />\n          <div className={classnames(`${prefixCls}-content`)}>\n            {visbleEditor && (\n              <CodeMirror\n                visbleEditor={visbleEditor}\n                ref={this.getInstance}\n                {...codemirrorProps}\n                onChange={this.onChange}\n              />\n            )}\n            <PreviewMarkdown\n              visble={visble}\n              ref={(pmd: PreviewMarkdown) => this.preview = pmd}\n              value={this.props.value}\n              previewProps={previewProps}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  public componentDidMount() {\n    if (this.preview && this.CodeMirror) {\n      this.props.visble ? this.preview.show() : this.preview.hide();\n      this.CodeMirror.editor.setSize(this.props.visble ? '50%' : '100%');\n      const { clientHeight } = this.CodeMirror.editor.getScrollInfo();\n      this.editorClientHeight = clientHeight;\n      window.addEventListener('resize', this.handleResize, true);\n    }\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize, true);\n  }\n\n  public handleResize = () => {\n    const isfullscreen = this.toolbarsMode.state.fullscreen\n    if (isfullscreen) {\n      this.setEditorSize(isfullscreen);\n    }\n  }\n\n  public componentWillReceiveProps(nextProps: IMarkdownEditor) {\n    if (nextProps.visble !== this.props.visble) {\n      nextProps.visble ? this.preview.show() : this.preview.hide();\n      this.CodeMirror.editor.setSize(nextProps.visble ? '50%' : '100%');\n    }\n  }\n\n  public getInstance = (editor: CodeMirror) => {\n    if (editor) {\n      this.CodeMirror = editor;\n    }\n  }\n  private onChange = (editor: IInstance, data: CodeMirror.EditorChange, value: string) => {\n    const { onChange } = this.props as IMarkdownEditor;\n    if (onChange) {\n      if (this.preview) {\n        this.preview.updateSource(editor.getValue());\n      }\n      onChange(editor, data, editor.getValue());\n    }\n  }\n\n  private previewMarkdown() {\n    if (this.preview) {\n      this.preview.state.visble ? this.preview.hide() : this.preview.show();\n      this.toolbarsMode.updateMode('preview', !this.preview.state.visble);\n      this.CodeMirror.editor.setSize(this.preview.state.visble ? '100%' : '50%');\n    }\n  }\n\n  private fullScreen() {\n    const { prefixCls } = this.props;\n    if (this.toolbarsMode && this.container) {\n      const isfullscreen = !this.toolbarsMode.state.fullscreen\n      this.toolbarsMode.updateMode('fullscreen', isfullscreen);\n      this.container.className = isfullscreen ? classnames(`${prefixCls}-fullscreen`) : '';\n      document.body.style.overflow = isfullscreen ? 'hidden' : 'initial';\n      this.setEditorSize(isfullscreen);\n    }\n  }\n\n  private setEditorSize(isfullscreen: boolean) {\n    const clientHeight = document.body.clientHeight;\n    this.CodeMirror.editor.setSize(this.preview.state.visble ? '50%' : '100%', isfullscreen ? clientHeight - 33 : this.editorClientHeight);\n  }\n\n  private onClickMode = (type: string) => {\n    if (type === 'preview') {\n      this.previewMarkdown();\n      return;\n    }\n    if (type === 'fullscreen') {\n      this.fullScreen();\n      return;\n    }\n  }\n\n  private onClick = (type: string) => {\n    const selection = this.CodeMirror.editor.getSelection();\n    const pos = this.CodeMirror.editor.getCursor();\n    let value = '';\n    // 'header', 'strike', 'underline', 'olist', 'ulist', 'todo', 'link', 'image', 'quote', 'preview'\n    if (type === 'bold') {\n      value = selection ? `**${selection}**` : `****`;\n      pos.ch = selection ? pos.ch : pos.ch + 2;\n    }\n    if (type === 'italic') {\n      value = selection ? `*${selection}*` : `**`;\n      pos.ch = selection ? pos.ch : pos.ch + 1;\n    }\n    if (type === 'header') {\n      value = selection ? `# ${selection}` : '# ';\n      pos.ch = selection ? pos.ch : pos.ch + 2;\n    }\n    if (type === 'strike') {\n      value = selection ? `~~${selection}~~` : '~~~~';\n      pos.ch = selection ? pos.ch : pos.ch + 2;\n    }\n    if (type === 'underline') {\n      value = selection ? `<u>${selection}</u>` : '<u></u>';\n      pos.ch = selection ? pos.ch : pos.ch + 3;\n    }\n    if (type === 'olist') {\n      value = selection ? `- ${selection}` : '- ';\n      pos.ch = selection ? pos.ch : pos.ch + 2;\n    }\n    if (type === 'ulist') {\n      value = selection ? `1. ${selection}` : '1. ';\n      pos.ch = selection ? pos.ch : pos.ch + 3;\n    }\n    if (type === 'todo') {\n      value = selection ? `- [ ] ${selection}` : '- [ ] ';\n      pos.ch = selection ? pos.ch : pos.ch + 6;\n    }\n    if (type === 'link') {\n      value = '[连接说明](连接地址 \"连接标题\")';\n    }\n    if (type === 'image') {\n      value = selection ? `${selection} ![](图片地址 \"图片描述\")` : '![图片描述](图片地址 \"图片描述\")\\n';\n    }\n    if (type === 'quote') {\n      value = selection ? `> ${selection}` : '> ';\n      pos.ch = selection ? pos.ch : pos.ch + 2;\n    }\n    this.CodeMirror.editor.replaceSelection(value);\n    this.CodeMirror.editor.focus();\n    this.CodeMirror.editor.setCursor(pos.line, pos.ch);\n  }\n}"]},"metadata":{},"sourceType":"module"}