{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Projects\\\\React_Markdown_Blog_Project\\\\REACT-MARKDOWN-BLOG-UI\\\\src\\\\containers\\\\PostCreate.js\";\nimport React, { useRef, useState } from 'react';\nimport { Header, Button, Form } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport Message from '../components/Message';\nimport axios from 'axios';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport { history } from \"../helpers\";\nimport { api } from \"../api\";\n\nconst PostCreate = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState(null);\n  const [markdown, setMarkdown] = useState(null);\n  const [thumbnail, setThumbnail] = useState(null);\n  const fileInputRef = useRef();\n  const mdParser = new MarkdownIt(); // Finish!\n\n  function handleEditorChange({\n    html,\n    text\n  }) {\n    setMarkdown(text);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    const formData = new FormData();\n    formData.append(\"thumbnail\", thumbnail);\n    formData.append(\"title\", title);\n    formData.append(\"content\", markdown);\n    console.log(formData);\n    axios.post(api.posts.create, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"Authorization\": \"Token 3c64107636c7c391802fb2e3c6a3c8a978fb7c33\"\n      }\n    }).then(res => {\n      console.log(res);\n      setLoading(false);\n      history.push('/'); // redirect back to the post list\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setError(err.message || err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Create a Post\"), error && /*#__PURE__*/React.createElement(Message, {\n    danger: true,\n    message: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), thumbnail && /*#__PURE__*/React.createElement(Message, {\n    info: true,\n    message: `Selected Image: ${thumbnail.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Title of Blog\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.TextArea, {\n    label: \"Content\",\n    placeholder: \"This is your post content\",\n    value: markdown,\n    onChange: e => setMarkdown(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MdEditor, {\n    value: \"\",\n    style: {\n      height: \"500px\"\n    },\n    renderHTML: text => mdParser.render(text),\n    onChange: handleEditorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    fluid: true,\n    content: \"Choose a Thumbnail\",\n    labelPosition: \"left\",\n    icon: \"file\",\n    onClick: () => fileInputRef.current.click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: e => setThumbnail(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    fluid: true,\n    loading: loading,\n    disabled: loading,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n};\n\nexport default withRouter(PostCreate);","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Projects/React_Markdown_Blog_Project/REACT-MARKDOWN-BLOG-UI/src/containers/PostCreate.js"],"names":["React","useRef","useState","Header","Button","Form","withRouter","Message","axios","MarkdownIt","MdEditor","history","api","PostCreate","error","setError","loading","setLoading","title","setTitle","markdown","setMarkdown","thumbnail","setThumbnail","fileInputRef","mdParser","handleEditorChange","html","text","handleSubmit","e","preventDefault","formData","FormData","append","console","log","post","posts","create","headers","then","res","push","catch","err","message","name","target","value","height","render","current","click","files"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport {Header, Button, Form } from 'semantic-ui-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Message from '../components/Message';\r\nimport axios from 'axios';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\nimport {history} from \"../helpers\";\r\nimport {api} from \"../api\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PostCreate = () =>{\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [title,setTitle] = useState(null);\r\n    const [markdown, setMarkdown] = useState(null);\r\n    const [thumbnail, setThumbnail] = useState(null)\r\n\r\n    const fileInputRef = useRef()\r\n\r\n    const mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n    // Finish!\r\n    function handleEditorChange({html, text}) {    \r\n        setMarkdown(text);\r\n    }\r\n\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const formData = new FormData()\r\n        formData.append(\"thumbnail\", thumbnail)\r\n        formData.append(\"title\", title)\r\n        formData.append(\"content\", markdown)\r\n        console.log(formData);\r\n        axios\r\n            .post(api.posts.create, formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                    \"Authorization\": \"Token 3c64107636c7c391802fb2e3c6a3c8a978fb7c33\"\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(res)\r\n                setLoading(false);\r\n                history.push('/')\r\n                // redirect back to the post list\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setLoading(false);\r\n                setError(err.message || err)\r\n            })\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Header>Create a Post</Header>\r\n        {error && (\r\n            <Message danger message={error} />\r\n        )}\r\n        {thumbnail && <Message info message={`Selected Image: ${thumbnail.name}`} />}\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Field>\r\n                <label>Title</label>\r\n                <input\r\n                 placeholder='Title of Blog' \r\n                 value={title} \r\n                 onChange={e => setTitle(e.target.value)}\r\n\r\n                 />\r\n            </Form.Field>\r\n            <Form.TextArea \r\n                label='Content' \r\n                placeholder='This is your post content' \r\n                value={markdown}\r\n                onChange={e => setMarkdown(e.target.value)}\r\n            />\r\n            <MdEditor\r\n                value=\"\"\r\n                style={{ height: \"500px\" }}\r\n                renderHTML={(text) => mdParser.render(text)}\r\n                onChange={handleEditorChange}\r\n            />\r\n            \r\n            <Form.Field>\r\n            \r\n                <Button \r\n                    type = \"button\"\r\n                    fluid\r\n                    content='Choose a Thumbnail' \r\n                    labelPosition=\"left\" \r\n                    icon='file'\r\n                    onClick={()=>fileInputRef.current.click()}\r\n                />\r\n                <input \r\n                    ref={fileInputRef} \r\n                    type='file'    \r\n                    hidden\r\n                    onChange={e => setThumbnail(e.target.files[0])}\r\n                    />\r\n            </Form.Field>\r\n            <Button primary fluid loading ={loading} disabled={loading}  type='submit'>Submit</Button>\r\n        </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default withRouter(PostCreate);"]},"metadata":{},"sourceType":"module"}