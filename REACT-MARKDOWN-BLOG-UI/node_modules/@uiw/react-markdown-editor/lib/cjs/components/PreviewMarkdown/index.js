"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _highlight = _interopRequireDefault(require("highlight.js"));

var React = _interopRequireWildcard(require("react"));

var _reactMarkdown = _interopRequireDefault(require("react-markdown"));

function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

_highlight.default.configure({
  classPrefix: '',
  // don't append class prefix
  tabReplace: '  ' // 2 spaces

});

var PreviewMarkdown = /*#__PURE__*/function (_React$Component) {
  (0, _inherits2.default)(PreviewMarkdown, _React$Component);

  var _super = _createSuper(PreviewMarkdown);

  function PreviewMarkdown(props) {
    var _this;

    (0, _classCallCheck2.default)(this, PreviewMarkdown);
    _this = _super.call(this, props);
    _this.node = void 0;

    _this.allowNode = function (node) {
      if (node.type === 'html' && node.value) {
        if (/<!--([^]+?)-->/.test(node.value)) {
          return false;
        }
      }

      return true;
    };

    _this.state = {
      value: props.value,
      visble: props.visble
    };
    return _this;
  }

  (0, _createClass2.default)(PreviewMarkdown, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.highlight();
    }
  }, {
    key: "show",
    value: function show() {
      this.setState({
        visble: true
      });
    }
  }, {
    key: "hide",
    value: function hide() {
      this.setState({
        visble: false
      });
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.visble !== this.props.visble) {
        this.setState({
          visble: nextProps.visble
        });
      }
    }
  }, {
    key: "highlight",
    value: function highlight() {
      var code = this.node.getElementsByTagName('code');

      var _iterator = _createForOfIteratorHelper(code),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var value = _step.value;
          var tag = value.parentNode;

          if (tag && tag.tagName === 'PRE') {
            _highlight.default.highlightBlock(value);
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "updateSource",
    value: function updateSource(value) {
      var _this2 = this;

      this.setState({
        value: value
      }, function () {
        _this2.highlight();
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          visble = _this$props.visble,
          value = _this$props.value,
          previewProps = _this$props.previewProps,
          elementProps = (0, _objectWithoutProperties2.default)(_this$props, ["prefixCls", "visble", "value", "previewProps"]);
      return /*#__PURE__*/React.createElement("div", (0, _extends2.default)({
        ref: function ref(node) {
          return _this3.node = node;
        },
        className: (0, _classnames2.default)("".concat(prefixCls, "-preview"), (0, _defineProperty2.default)({}, "".concat(prefixCls, "-visble"), this.state.visble))
      }, elementProps), /*#__PURE__*/React.createElement(_reactMarkdown.default, (0, _extends2.default)({
        className: (0, _classnames2.default)("".concat(prefixCls, "-markdown")),
        source: this.state.value,
        escapeHtml: false,
        allowNode: this.allowNode
      }, previewProps)));
    }
  }]);
  return PreviewMarkdown;
}(React.Component);

exports.default = PreviewMarkdown;
PreviewMarkdown.defaultProps = {
  prefixCls: 'md-editor',
  visble: true
};
module.exports = exports.default; 
//# sourceMappingURL=index.js.map