"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _classnames = _interopRequireDefault(require("classnames"));

var React = _interopRequireWildcard(require("react"));

var _bar = _interopRequireDefault(require("../Icon/bar"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ToolBar = /*#__PURE__*/function (_React$PureComponent) {
  (0, _inherits2.default)(ToolBar, _React$PureComponent);

  var _super = _createSuper(ToolBar);

  function ToolBar() {
    (0, _classCallCheck2.default)(this, ToolBar);
    return _super.apply(this, arguments);
  }

  (0, _createClass2.default)(ToolBar, [{
    key: "render",
    value: function render() {
      var _this = this;

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          className = _this$props.className,
          onClick = _this$props.onClick,
          toolbars = _this$props.toolbars,
          htmlProps = (0, _objectWithoutProperties2.default)(_this$props, ["prefixCls", "className", "onClick", "toolbars"]);
      if (!toolbars || toolbars.length === 0) return null;
      return /*#__PURE__*/React.createElement("div", (0, _extends2.default)({
        className: (0, _classnames.default)("".concat(prefixCls, "-toolbar"), className)
      }, htmlProps), toolbars.map(function (name, key) {
        var Icon = _bar.default[name];
        return /*#__PURE__*/React.createElement("button", {
          type: "button",
          key: key,
          onClick: onClick.bind(_this, name)
        }, " ", Icon, " ");
      }));
    }
  }]);
  return ToolBar;
}(React.PureComponent);

exports.default = ToolBar;
ToolBar.displayName = 'ToolBar';
ToolBar.defaultProps = {
  onClick: function onClick() {
    return null;
  },
  prefixCls: 'md-editor',
  toolbars: ['bold', 'italic', 'header', 'strike', 'underline', 'olist', 'ulist', 'todo', 'link', 'image', 'quote']
};
module.exports = exports.default; 
//# sourceMappingURL=index.js.map